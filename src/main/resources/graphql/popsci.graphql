type StudyInfo {
    cases: Int
    program: String 
    study_code: String
    study_id: String
    study_name: String
    study_type: String
}

type StudyDetail {
    study_code: String
    study_id: String
    study_name: String
    study_type: String
    description: String
    actual_start_date: String
    actual_completion_date: String
    organization: String
    cases: Int
    numberOfPrograms: Int
    numberOfStudies: Int
    numberOfCases: Int
    numberOfFiles: Int
}

type IdsLists{
	case_ids: [String]
}

type CaseResult{
	case_id: String
	cohort_id: String
}

schema {
    query: QueryType
}

type QueryType {

    studyInfo: [StudyInfo] @cypher(statement: """
        MATCH (ct)<-[:of_clinical_trial]-(co)<--(c)
        RETURN 
            {
                cases: COUNT(c),
                program: ct.clinical_trial_short_name,
                study_code: co.cohort_id,
                study_id: co.clinical_trials_gov_id,
                study_name: co.cohort_title,
                study_type: ct.clinical_trial_type
            }
    """, passThrough: true)

    studyDetail (study_code: String): StudyDetail @cypher(statement: """
        MATCH (ct)<-[:of_clinical_trial]-(co:cohort {cohort_id: $study_code})<--(c)
        RETURN 
        {
            study_code: co.cohort_id,
            study_id: co.clinical_trials_gov_id,
            study_name: co.cohort_title,
            study_type: ct.clinical_trial_type,
            description: co.cohort_description,
            actual_start_date: co.start_date,
            actual_completion_date: co.completion_date,
            organization: ct.lead_organization,
            cases: COUNT(c),
            numberOfPrograms: 1,
            numberOfStudies: 1,
            numberOfCases: COUNT(c),
            numberOfFiles: 0
        }
    """, passThrough: true)

    findCaseIdsInList(case_ids: [String] = []): [CaseResult] @cypher(statement: """
		MATCH (c:case)-->(co:cohort)
		RETURN
			c.case_id AS case_id,
			co.cohort_id AS cohort_id
	""", passThrough: true)

	idsLists: IdsLists @cypher(statement: """
		MATCH (c:case)
		RETURN COLLECT(DISTINCT c.case_id) AS case_ids
	""", passThrough: true)
}
